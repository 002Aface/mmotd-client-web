##################################
# Appengine application settings #
##################################

# application name
application: mmotd-dev
# sub-version of the application
version: 1
# in Python we trust
runtime: python27
api_version: 1
# if your application is not threadsafe, set the below value to `false`
threadsafe: true

# Python libraries to be made available on the path must be available within
# the appengine SDK, this is not for use with generally available libraries
# (e.g. those downloaded from PyPI), those must be placed within your app.
# A full list of the libraries available within the appengine SDK is available
# here: https://developers.google.com/appengine/docs/python/tools/libraries27
libraries:
- name: django
  version: "1.5"
- name: PIL
  version: "latest"
- name: webapp2
  version: "2.5.2"
- name: webob
  version: "1.2.3"


builtins:
- appstats: on
- deferred: on

inbound_services:
- channel_presence
- warmup

env_variables:
  DJANGO_SETTINGS_MODULE: 'config.settings'

handlers:
# we can't serve static assets like Django normally would, so we need to tell
# appengine to serve them for us. A big disadvantage of this is that it's a lot
# more awkward to use the static files bundled with third-party apps (they need
# to be collected first).
- url: /static
  static_dir: static
  application_readable: true
# serve the favicon located at 'static/favicon.ico' at '/favicon.ico'
- url: /favicon.ico
  static_files: static/favicon.ico
  upload: static/favicon.ico
# route everything else to Django
- url: /.*
  script: config.wsgi.application

# Skip uploading any files that match the below regexes when deploying
skip_files:
- ^(.*/)?app.yaml
- ^(.*/)?.*\.py[co]
- ^(.*/)?\..*
